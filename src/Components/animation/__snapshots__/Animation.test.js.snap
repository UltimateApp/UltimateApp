// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Animation /> renders correctly 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "flex-start",
        "backgroundColor": "white",
        "flexDirection": "row",
        "justifyContent": "center",
      },
      Object {
        "height": NaN,
      },
      Object {
        "width": NaN,
      },
    ]
  }
>
  <View
    onMoveShouldSetResponder={[Function]}
    onMoveShouldSetResponderCapture={[Function]}
    onResponderEnd={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderReject={[Function]}
    onResponderRelease={[Function]}
    onResponderStart={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onStartShouldSetResponderCapture={[Function]}
    style={
      Object {
        "borderRadius": NaN,
        "height": NaN,
        "left": 0,
        "position": "absolute",
        "textAlign": "center",
        "textAlignVertical": "center",
        "top": 0,
        "transform": Array [
          Object {
            "translateX": NaN,
          },
          Object {
            "translateY": NaN,
          },
        ],
        "width": NaN,
      }
    }
  >
    <ViewManagerAdapter_ExpoLinearGradient
      proxiedProperties={
        Object {
          "colors": Array [
            4278759146,
            4281005464,
          ],
          "endPoint": Array [
            0,
            0,
          ],
          "locations": undefined,
          "startPoint": Array [
            1,
            1,
          ],
        }
      }
      style={
        Array [
          Object {
            "alignItems": "center",
            "flex": 1,
            "justifyContent": "center",
          },
          Object {
            "borderRadius": NaN,
            "height": NaN,
            "width": NaN,
          },
        ]
      }
    >
      <Text
        style={
          Object {
            "color": "#fff",
            "fontWeight": "bold",
          }
        }
      >
        1
      </Text>
    </ViewManagerAdapter_ExpoLinearGradient>
  </View>
  <View
    onMoveShouldSetResponder={[Function]}
    onMoveShouldSetResponderCapture={[Function]}
    onResponderEnd={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderReject={[Function]}
    onResponderRelease={[Function]}
    onResponderStart={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onStartShouldSetResponderCapture={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#AFAFAF",
        "borderRadius": NaN,
        "height": NaN,
        "justifyContent": "center",
        "left": 0,
        "position": "absolute",
        "top": 0,
        "transform": Array [
          Object {
            "translateX": NaN,
          },
          Object {
            "translateY": NaN,
          },
        ],
        "width": NaN,
      }
    }
  >
    <Text
      style={
        Object {
          "color": "#fff",
          "fontWeight": "bold",
        }
      }
    >
      2
    </Text>
  </View>
  <View
    onMoveShouldSetResponder={[Function]}
    onMoveShouldSetResponderCapture={[Function]}
    onResponderEnd={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderReject={[Function]}
    onResponderRelease={[Function]}
    onResponderStart={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onStartShouldSetResponderCapture={[Function]}
    style={
      Object {
        "borderRadius": NaN,
        "height": NaN,
        "left": 0,
        "position": "absolute",
        "textAlign": "center",
        "textAlignVertical": "center",
        "top": 0,
        "transform": Array [
          Object {
            "translateX": NaN,
          },
          Object {
            "translateY": NaN,
          },
        ],
        "width": NaN,
      }
    }
  >
    <ViewManagerAdapter_ExpoLinearGradient
      proxiedProperties={
        Object {
          "colors": Array [
            4278759146,
            4281005464,
          ],
          "endPoint": Array [
            0,
            0,
          ],
          "locations": undefined,
          "startPoint": Array [
            1,
            1,
          ],
        }
      }
      style={
        Array [
          Object {
            "alignItems": "center",
            "flex": 1,
            "justifyContent": "center",
          },
          Object {
            "borderRadius": NaN,
            "height": NaN,
            "width": NaN,
          },
        ]
      }
    >
      <Text
        style={
          Object {
            "color": "#fff",
            "fontWeight": "bold",
          }
        }
      >
        3
      </Text>
    </ViewManagerAdapter_ExpoLinearGradient>
  </View>
  <View
    onMoveShouldSetResponder={[Function]}
    onMoveShouldSetResponderCapture={[Function]}
    onResponderEnd={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderReject={[Function]}
    onResponderRelease={[Function]}
    onResponderStart={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onStartShouldSetResponderCapture={[Function]}
    style={
      Object {
        "backgroundColor": "white",
        "borderColor": "black",
        "borderRadius": 20,
        "borderWidth": 2,
        "height": 20,
        "left": 0,
        "position": "absolute",
        "top": 0,
        "transform": Array [
          Object {
            "translateX": NaN,
          },
          Object {
            "translateY": NaN,
          },
        ],
        "width": 20,
      }
    }
  />
  <View
    style={
      Object {
        "bottom": 0,
        "flexDirection": "row",
        "marginLeft": 30,
        "position": "absolute",
        "right": 0,
      }
    }
  >
    <View
      accessible={true}
      focusable={true}
      isTVSelectable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "height": 30,
          "justifyContent": "center",
          "opacity": 1,
          "width": 30,
        }
      }
    >
      <Image
        source={1}
        style={
          Object {
            "height": 20,
            "width": 20,
          }
        }
      />
    </View>
    <View
      accessible={true}
      focusable={true}
      isTVSelectable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "height": 30,
          "justifyContent": "center",
          "opacity": 1,
          "width": 30,
        }
      }
    >
      <Image
        source={1}
        style={
          Object {
            "height": 20,
            "width": 20,
          }
        }
      />
    </View>
    <View
      accessible={true}
      focusable={true}
      isTVSelectable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "height": 30,
          "justifyContent": "center",
          "opacity": 1,
          "width": 30,
        }
      }
    >
      <Image
        source={1}
        style={
          Object {
            "height": 20,
            "width": 20,
          }
        }
      />
    </View>
  </View>
  <View
    style={
      Object {
        "backgroundColor": "gray",
        "bottom": 10,
        "height": 10,
        "left": 20,
        "position": "absolute",
        "width": NaN,
      }
    }
  />
  <View
    style={
      Object {
        "backgroundColor": "black",
        "bottom": 10,
        "height": 10,
        "left": 20,
        "position": "absolute",
        "width": NaN,
      }
    }
  />
  <View
    accessible={true}
    focusable={true}
    isTVSelectable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "backgroundColor": "transparent",
        "bottom": 0,
        "height": 25,
        "left": NaN,
        "opacity": 1,
        "position": "absolute",
        "width": NaN,
      }
    }
  />
  <View
    accessible={true}
    focusable={true}
    isTVSelectable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "backgroundColor": "transparent",
        "bottom": 0,
        "height": 25,
        "left": NaN,
        "opacity": 1,
        "position": "absolute",
        "width": NaN,
      }
    }
  />
  <View
    accessible={true}
    focusable={true}
    isTVSelectable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "backgroundColor": "transparent",
        "bottom": 0,
        "height": 25,
        "left": NaN,
        "opacity": 1,
        "position": "absolute",
        "width": NaN,
      }
    }
  />
</View>
`;
