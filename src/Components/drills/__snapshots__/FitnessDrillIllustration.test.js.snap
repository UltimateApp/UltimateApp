// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<FitnessDrillIllustration /> links to any step and finishes at the end 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "height": 250,
        },
        false,
      ]
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "flex": 1,
          "height": 250,
          "justifyContent": "center",
        }
      }
    >
      <View
        style={
          Object {
            "position": "absolute",
          }
        }
      >
        <ActivityIndicator
          animating={true}
          color="#A6A6A6"
          hidesWhenStopped={true}
          size="large"
        />
        <Text>
          Loading…
        </Text>
      </View>
      <View
        pointerEvents="box-none"
        style={
          Object {
            "height": 250,
            "overflow": "hidden",
            "width": "100%",
          }
        }
      >
        <ViewManagerAdapter_ExpoVideoView
          proxiedProperties={
            Object {
              "onError": [Function],
              "onFullscreenUpdate": [Function],
              "onLoad": [Function],
              "onLoadStart": [Function],
              "onReadyForDisplay": [Function],
              "onStatusUpdate": [Function],
              "resizeMode": "mock",
              "source": undefined,
              "status": Object {},
              "useNativeControls": true,
            }
          }
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        />
      </View>
    </View>
  </View>
  <RCTScrollView
    data={
      Array [
        Object {
          "id": 1,
          "repetition": 3,
          "title": "First Step",
          "vimeoId": "406746924",
        },
        Object {
          "id": 2,
          "repetition": 3,
          "title": "Second Step",
          "vimeoId": "406747302",
        },
        Object {
          "id": 3,
          "repetition": 3,
          "title": "Third Step",
          "vimeoId": "406747476",
        },
      ]
    }
    disableVirtualization={false}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    nestedScrollEnabled={true}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "flex": 1,
              "flexDirection": "row",
              "justifyContent": "space-between",
              "opacity": 1,
              "padding": 20,
            }
          }
        >
          <View
            style={
              Object {
                "flexShrink": 1,
              }
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#232b2b",
                    "fontSize": 20,
                  },
                  Object {
                    "color": "#A6A6A6",
                  },
                  Object {},
                ]
              }
            >
              3
               
              First Step
            </Text>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "flex": 1,
              "flexDirection": "row",
              "justifyContent": "space-between",
              "opacity": 1,
              "padding": 20,
            }
          }
        >
          <View
            style={
              Object {
                "flexShrink": 1,
              }
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#232b2b",
                    "fontSize": 20,
                  },
                  Object {
                    "color": "#A6A6A6",
                  },
                  Object {},
                ]
              }
            >
              3
               
              Second Step
            </Text>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "flex": 1,
              "flexDirection": "row",
              "justifyContent": "space-between",
              "opacity": 1,
              "padding": 20,
            }
          }
        >
          <View
            style={
              Object {
                "flexShrink": 1,
              }
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#232b2b",
                    "fontSize": 20,
                  },
                  Object {},
                  Object {
                    "fontWeight": "bold",
                  },
                ]
              }
            >
              3
               
              Third Step
            </Text>
          </View>
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "height": "100%",
                "justifyContent": "center",
                "opacity": 1,
                "padding": 10,
              }
            }
            testID="doneIcon"
          >
            <View>
              <Text
                allowFontScaling={false}
                style={
                  Array [
                    Object {
                      "color": undefined,
                      "fontSize": 26,
                    },
                    Object {
                      "color": "rgba(166, 166, 166, 1)",
                    },
                    Object {
                      "fontFamily": "material-community",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                󰗠
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;

exports[`<FitnessDrillIllustration /> links to any step and finishes at the end 2`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "flex": 1,
        "justifyContent": "center",
        "padding": 20,
      }
    }
  >
    <Text
      style={
        Object {
          "color": "#232b2b",
          "fontSize": 16,
          "fontWeight": "bold",
          "marginVertical": 50,
        }
      }
    >
      You have completed the drill!
    </Text>
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "height": 80,
          "opacity": 1,
          "width": 80,
        }
      }
    >
      <Text
        allowFontScaling={false}
        style={
          Array [
            Object {
              "color": "#232b2b",
              "fontSize": 50,
            },
            undefined,
            Object {
              "fontFamily": "material-community",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
            Object {},
          ]
        }
      >
        󰜉
      </Text>
    </View>
  </View>
</View>
`;

exports[`<FitnessDrillIllustration /> renders correctly 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "height": 250,
        },
        false,
      ]
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "flex": 1,
          "height": 250,
          "justifyContent": "center",
        }
      }
    >
      <View
        style={
          Object {
            "position": "absolute",
          }
        }
      >
        <ActivityIndicator
          animating={true}
          color="#A6A6A6"
          hidesWhenStopped={true}
          size="large"
        />
        <Text>
          Loading…
        </Text>
      </View>
      <View
        pointerEvents="box-none"
        style={
          Object {
            "height": 250,
            "overflow": "hidden",
            "width": "100%",
          }
        }
      >
        <ViewManagerAdapter_ExpoVideoView
          proxiedProperties={
            Object {
              "onError": [Function],
              "onFullscreenUpdate": [Function],
              "onLoad": [Function],
              "onLoadStart": [Function],
              "onReadyForDisplay": [Function],
              "onStatusUpdate": [Function],
              "resizeMode": "mock",
              "source": undefined,
              "status": Object {},
              "useNativeControls": true,
            }
          }
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        />
      </View>
    </View>
  </View>
  <RCTScrollView
    data={
      Array [
        Object {
          "id": 1,
          "repetition": 3,
          "title": "First Step",
          "vimeoId": "406746924",
        },
        Object {
          "id": 2,
          "repetition": 3,
          "title": "Second Step",
          "vimeoId": "406747302",
        },
        Object {
          "id": 3,
          "repetition": 3,
          "title": "Third Step",
          "vimeoId": "406747476",
        },
      ]
    }
    disableVirtualization={false}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    nestedScrollEnabled={true}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "flex": 1,
              "flexDirection": "row",
              "justifyContent": "space-between",
              "opacity": 1,
              "padding": 20,
            }
          }
        >
          <View
            style={
              Object {
                "flexShrink": 1,
              }
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#232b2b",
                    "fontSize": 20,
                  },
                  Object {},
                  Object {
                    "fontWeight": "bold",
                  },
                ]
              }
            >
              3
               
              First Step
            </Text>
          </View>
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "height": "100%",
                "justifyContent": "center",
                "opacity": 1,
                "padding": 10,
              }
            }
            testID="doneIcon"
          >
            <View>
              <Text />
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "flex": 1,
              "flexDirection": "row",
              "justifyContent": "space-between",
              "opacity": 1,
              "padding": 20,
            }
          }
        >
          <View
            style={
              Object {
                "flexShrink": 1,
              }
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#232b2b",
                    "fontSize": 20,
                  },
                  Object {},
                  Object {},
                ]
              }
            >
              3
               
              Second Step
            </Text>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "flex": 1,
              "flexDirection": "row",
              "justifyContent": "space-between",
              "opacity": 1,
              "padding": 20,
            }
          }
        >
          <View
            style={
              Object {
                "flexShrink": 1,
              }
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#232b2b",
                    "fontSize": 20,
                  },
                  Object {},
                  Object {},
                ]
              }
            >
              3
               
              Third Step
            </Text>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;
