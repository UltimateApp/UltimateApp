// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<FrisbeeDrillIllustration /> renders correctly 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RCTScrollView
    activeAnimationOptions={null}
    activeAnimationType="timing"
    activeSlideAlignment="center"
    activeSlideOffset={20}
    apparitionDelay={0}
    automaticallyAdjustContentInsets={false}
    autoplay={false}
    autoplayDelay={1000}
    autoplayInterval={3000}
    callbackOffsetMargin={5}
    containerCustomStyle={Object {}}
    contentContainerCustomStyle={Object {}}
    contentContainerStyle={
      Array [
        Object {
          "paddingLeft": 0,
          "paddingRight": 0,
        },
        Object {},
      ]
    }
    data={
      Array [
        Object {
          "id": 0,
          "illustrationSource": "462695757",
          "illustrationType": "vimeo",
        },
      ]
    }
    decelerationRate="fast"
    directionalLockEnabled={true}
    disableVirtualization={false}
    enableMomentum={false}
    enableSnap={true}
    firstItem={0}
    forwardedRef={[Function]}
    getItem={[Function]}
    getItemCount={[Function]}
    hasParallaxImages={false}
    horizontal={true}
    inactiveSlideOpacity={0.7}
    inactiveSlideScale={0.9}
    inactiveSlideShift={0}
    initialNumToRender={6}
    invertStickyHeaders={false}
    inverted={false}
    itemWidth={750}
    keyExtractor={[Function]}
    layout="default"
    lockScrollTimeoutDuration={1000}
    lockScrollWhileSnapping={false}
    loop={false}
    loopClonesPerSide={3}
    maxToRenderPerBatch={13}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onResponderRelease={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    onSnapToItem={[Function]}
    onStartShouldSetResponderCapture={[Function]}
    onTouchEnd={[Function]}
    onTouchStart={[Function]}
    overScrollMode="never"
    pinchGestureEnabled={false}
    removeClippedSubviews={true}
    renderItem={[Function]}
    scrollEnabled={true}
    scrollEventThrottle={1}
    scrollsToTop={false}
    shouldOptimizeUpdates={true}
    showsHorizontalScrollIndicator={false}
    showsVerticalScrollIndicator={false}
    slideStyle={Object {}}
    sliderWidth={750}
    stickyHeaderIndices={Array []}
    style={
      Object {
        "flexDirection": "row",
        "opacity": 0,
        "width": 750,
      }
    }
    swipeThreshold={20}
    updateCellsBatchingPeriod={50}
    useScrollView={false}
    vertical={false}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={13}
  >
    <View>
      <View
        onLayout={[Function]}
        style={
          Array [
            Object {
              "flexDirection": "row",
            },
            null,
          ]
        }
      >
        <View
          pointerEvents="box-none"
          style={
            Object {
              "opacity": 1,
              "transform": Array [
                Object {
                  "scale": 1,
                },
              ],
              "width": 750,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "height": 40,
                "justifyContent": "space-between",
                "marginHorizontal": 30,
              }
            }
          >
            <View />
            <Text
              style={
                Object {
                  "color": "#232b2b",
                  "fontSize": 16,
                  "textAlign": "center",
                }
              }
            />
            <View />
          </View>
          <View>
            <View />
            <View
              style={
                Object {
                  "paddingBottom": 20,
                  "paddingVertical": 10,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "bottom": 0,
                    "justifyContent": "center",
                    "left": 0,
                    "paddingVertical": 10,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "paddingVertical": 10,
                      "position": "absolute",
                    }
                  }
                />
              </View>
            </View>
          </View>
          <RCTScrollView>
            <View>
              <View
                style={
                  Object {
                    "minHeight": 375,
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "height": 250,
                      },
                      Object {
                        "flex": 1,
                      },
                    ]
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "flex": 1,
                        "height": 250,
                        "justifyContent": "center",
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "position": "absolute",
                        }
                      }
                    >
                      <ActivityIndicator
                        animating={true}
                        color="#A6A6A6"
                        hidesWhenStopped={true}
                        size="large"
                      />
                      <Text>
                        Loadingâ€¦
                      </Text>
                    </View>
                    <View
                      pointerEvents="box-none"
                      style={
                        Object {
                          "height": 250,
                          "overflow": "hidden",
                          "width": "100%",
                        }
                      }
                    >
                      <ViewManagerAdapter_ExpoVideoView
                        proxiedProperties={
                          Object {
                            "onError": [Function],
                            "onFullscreenUpdate": [Function],
                            "onLoad": [Function],
                            "onLoadStart": [Function],
                            "onReadyForDisplay": [Function],
                            "onStatusUpdate": [Function],
                            "resizeMode": "mock",
                            "source": undefined,
                            "status": Object {},
                            "useNativeControls": true,
                          }
                        }
                        style={
                          Object {
                            "bottom": 0,
                            "left": 0,
                            "position": "absolute",
                            "right": 0,
                            "top": 0,
                          }
                        }
                      />
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </RCTScrollView>
        </View>
      </View>
    </View>
  </RCTScrollView>
</RCTSafeAreaView>
`;
