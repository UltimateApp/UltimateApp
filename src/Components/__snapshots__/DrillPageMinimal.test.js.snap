// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<DrillPageMinimal /> renders correctly with a training and a drill 1`] = `
Array [
  <View
    style={
      Object {
        "backgroundColor": "#fff",
        "flex": 1,
        "marginBottom": 50,
      }
    }
  >
    <View
      style={
        Object {
          "flexGrow": 0,
          "flexShrink": 1,
          "marginVertical": 10,
        }
      }
    >
      <Text
        style={
          Object {
            "fontSize": 20,
            "fontWeight": "bold",
            "marginRight": 46,
            "textAlign": "center",
          }
        }
      >
        Fitness Drill Title
      </Text>
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
            "position": "absolute",
            "right": 20,
          }
        }
        testID="detailsButton"
      >
        <Text />
      </View>
    </View>
    <View
      style={
        Object {
          "flexGrow": 1,
          "flexShrink": 0,
        }
      }
    >
      <View
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <View
          style={
            Object {
              "height": 250,
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "flex": 1,
                  "overflow": "hidden",
                },
                undefined,
              ]
            }
          >
            <RNCWebView
              cacheEnabled={true}
              injectedJavaScriptBeforeContentLoadedForMainFrameOnly={true}
              injectedJavaScriptForMainFrameOnly={true}
              javaScriptEnabled={true}
              messagingEnabled={false}
              onContentProcessDidTerminate={[Function]}
              onHttpError={[Function]}
              onLoadingError={[Function]}
              onLoadingFinish={[Function]}
              onLoadingProgress={[Function]}
              onLoadingStart={[Function]}
              onMessage={[Function]}
              onShouldStartLoadWithRequest={[Function]}
              source={
                Object {
                  "uri": "https://www.youtube.com/embed/JkVHrA5o23o",
                }
              }
              style={
                Array [
                  Object {
                    "flex": 1,
                    "overflow": "hidden",
                  },
                  Object {
                    "backgroundColor": "#ffffff",
                  },
                  undefined,
                ]
              }
              useSharedProcessPool={true}
            />
          </View>
        </View>
        <View
          style={
            Object {
              "flexDirection": "row",
              "padding": 20,
            }
          }
        >
          <View
            style={
              Object {
                "alignSelf": "flex-end",
                "flexDirection": "row",
              }
            }
          >
            <View
              style={
                Object {
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <View
                style={
                  Object {
                    "flex": 6,
                  }
                }
              >
                <Text>
                  Warmup
                </Text>
              </View>
              <View
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "flex": 1,
                    "opacity": 1,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <Text />
                </View>
                <View
                  style={
                    Object {
                      "opacity": 0,
                    }
                  }
                >
                  <Text />
                </View>
              </View>
            </View>
          </View>
        </View>
        <View
          style={
            Object {
              "borderBottomColor": "#DCDCDC",
              "borderBottomWidth": 1,
            }
          }
        />
        <Text
          style={
            Object {
              "alignItems": "center",
              "color": "#232b2b",
              "fontSize": 16,
              "justifyContent": "center",
              "marginBottom": 20,
              "marginLeft": 20,
              "marginTop": 20,
            }
          }
        />
      </View>
    </View>
  </View>,
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fff",
        "bottom": 0,
        "paddingBottom": 10,
        "paddingTop": 5,
        "position": "absolute",
        "width": "100%",
      }
    }
  >
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#232b2b",
          "borderRadius": 5,
          "height": 40,
          "justifyContent": "center",
          "opacity": 1,
          "padding": 10,
          "width": "80%",
        }
      }
      testID="button"
    >
      <Text
        style={
          Object {
            "color": "#fff",
            "fontSize": 16,
            "textAlign": "center",
          }
        }
      >
        Next drill
      </Text>
    </View>
  </View>,
]
`;
