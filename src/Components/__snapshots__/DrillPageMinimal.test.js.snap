// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<DrillPageMinimal /> renders correctly with a training and a drill 1`] = `
Array [
  <View
    style={
      Object {
        "backgroundColor": "#fff",
        "flex": 1,
        "marginBottom": 50,
      }
    }
  >
    <View
      style={
        Object {
          "flexGrow": 1,
          "flexShrink": 0,
        }
      }
    >
      <View
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "height": 250,
              },
              false,
            ]
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "height": 250,
                "justifyContent": "center",
              }
            }
          >
            <View
              style={
                Object {
                  "position": "absolute",
                }
              }
            >
              <ActivityIndicator
                animating={true}
                color="#A6A6A6"
                hidesWhenStopped={true}
                size="large"
              />
              <Text>
                Loadingâ€¦
              </Text>
            </View>
            <View
              pointerEvents="box-none"
              style={
                Object {
                  "height": 250,
                  "overflow": "hidden",
                  "width": "100%",
                }
              }
            >
              <ViewManagerAdapter_ExpoVideoView
                proxiedProperties={
                  Object {
                    "onError": [Function],
                    "onFullscreenUpdate": [Function],
                    "onLoad": [Function],
                    "onLoadStart": [Function],
                    "onReadyForDisplay": [Function],
                    "onStatusUpdate": [Function],
                    "resizeMode": "mock",
                    "source": undefined,
                    "status": Object {},
                    "useNativeControls": true,
                  }
                }
                style={
                  Object {
                    "bottom": 0,
                    "left": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
            </View>
          </View>
        </View>
        <RCTScrollView
          data={
            Array [
              Object {
                "id": 0,
                "illustrationSource": "462695757",
                "illustrationType": "vimeo",
                "subtitle": "This is a subtitle",
                "title": "Warmup",
              },
              Object {
                "id": 1,
                "illustrationSource": "462695757",
                "illustrationType": "vimeo",
                "subtitle": "This is a subtitle",
                "title": "Do the drill",
              },
              Object {
                "id": 2,
                "illustrationSource": "462695757",
                "illustrationType": "vimeo",
                "subtitle": "This is a subtitle",
                "title": "Last step",
              },
            ]
          }
          disableVirtualization={false}
          getItem={[Function]}
          getItemCount={[Function]}
          horizontal={false}
          initialNumToRender={10}
          keyExtractor={[Function]}
          maxToRenderPerBatch={10}
          nestedScrollEnabled={true}
          onContentSizeChange={[Function]}
          onEndReachedThreshold={2}
          onLayout={[Function]}
          onMomentumScrollEnd={[Function]}
          onScroll={[Function]}
          onScrollBeginDrag={[Function]}
          onScrollEndDrag={[Function]}
          removeClippedSubviews={false}
          renderItem={[Function]}
          scrollEventThrottle={50}
          stickyHeaderIndices={Array []}
          updateCellsBatchingPeriod={50}
          viewabilityConfigCallbackPairs={Array []}
          windowSize={21}
        >
          <View>
            <View
              onLayout={[Function]}
              style={null}
            >
              <View
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "flexDirection": "row",
                    "opacity": 1,
                    "padding": 20,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "flexGrow": 0,
                      "flexShrink": 0,
                    }
                  }
                >
                  <Text
                    style={
                      Array [
                        Object {
                          "color": "#232b2b",
                          "fontSize": 20,
                        },
                        Object {},
                        Object {
                          "fontWeight": "bold",
                        },
                      ]
                    }
                  >
                     
                    Warmup
                  </Text>
                </View>
                <View
                  accessible={true}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "flex": 1,
                      "opacity": 1,
                    }
                  }
                  testID="doneIcon"
                >
                  <View
                    style={
                      Object {
                        "opacity": 1,
                      }
                    }
                  >
                    <Text />
                  </View>
                  <View
                    style={
                      Object {
                        "opacity": 0,
                      }
                    }
                  >
                    <Text />
                  </View>
                </View>
              </View>
            </View>
            <View
              onLayout={[Function]}
              style={null}
            >
              <View
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "flexDirection": "row",
                    "opacity": 1,
                    "padding": 20,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "flexGrow": 0,
                      "flexShrink": 0,
                    }
                  }
                >
                  <Text
                    style={
                      Array [
                        Object {
                          "color": "#232b2b",
                          "fontSize": 20,
                        },
                        Object {},
                        Object {},
                      ]
                    }
                  >
                     
                    Do the drill
                  </Text>
                </View>
              </View>
            </View>
            <View
              onLayout={[Function]}
              style={null}
            >
              <View
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "flexDirection": "row",
                    "opacity": 1,
                    "padding": 20,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "flexGrow": 0,
                      "flexShrink": 0,
                    }
                  }
                >
                  <Text
                    style={
                      Array [
                        Object {
                          "color": "#232b2b",
                          "fontSize": 20,
                        },
                        Object {},
                        Object {},
                      ]
                    }
                  >
                     
                    Last step
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </RCTScrollView>
      </View>
    </View>
  </View>,
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fff",
        "bottom": 0,
        "paddingBottom": 10,
        "paddingTop": 5,
        "position": "absolute",
        "width": "100%",
      }
    }
  >
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#2a9e91",
          "borderRadius": 5,
          "height": 40,
          "justifyContent": "center",
          "opacity": 1,
          "paddingHorizontal": 20,
          "paddingVertical": 10,
          "width": "80%",
        }
      }
      testID="button"
    >
      <Text
        style={
          Object {
            "color": "#fff",
            "fontSize": 16,
            "textAlign": "center",
          }
        }
      >
        Next drill
      </Text>
    </View>
  </View>,
]
`;
