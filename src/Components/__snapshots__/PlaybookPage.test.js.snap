// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<PlaybookPage /> renders correctly when empty 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#fff",
      "flex": 1,
    }
  }
>
  <RCTScrollView
    ListEmptyComponent={[Function]}
    data={Array []}
    disableVirtualization={false}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View>
      <View
        style={
          Object {
            "marginTop": "30%",
            "padding": 30,
          }
        }
      >
        <Text
          style={
            Object {
              "fontSize": 16,
              "marginBottom": 50,
              "textAlign": "center",
            }
          }
        >
          Your playbook is empty!
        </Text>
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "borderTopColor": "#e5e5e5",
              "borderTopWidth": 1,
              "marginBottom": 20,
              "opacity": 1,
              "paddingTop": 10,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "borderColor": "#2a9e91",
                "borderRadius": 25,
                "borderWidth": 1,
                "height": 50,
                "justifyContent": "center",
                "width": 50,
              }
            }
          >
            <Text />
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;

exports[`<PlaybookPage /> renders correctly with plays 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#fff",
      "flex": 1,
    }
  }
>
  <RCTScrollView
    ListEmptyComponent={[Function]}
    data={
      Array [
        Object {
          "animation": Drill {
            "background": "endzone",
            "ids": Array [],
            "positions": Array [
              Array [],
              Array [],
            ],
            "texts": Array [],
          },
          "title": "title",
          "uuid": undefined,
        },
      ]
    }
    disableVirtualization={false}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Array [
              Object {
                "flex": 1,
                "flexDirection": "row",
              },
              Object {
                "height": 60,
                "paddingLeft": 20,
              },
            ]
          }
        >
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "flex": 1,
                "flexGrow": 1,
                "flexShrink": 1,
                "justifyContent": "center",
                "opacity": 1,
              }
            }
          >
            <Text
              numberOfLines={1}
              style={
                Object {
                  "fontSize": 16,
                  "fontWeight": "bold",
                }
              }
            >
              
              title
            </Text>
          </View>
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "justifyContent": "center",
                "opacity": 1,
                "padding": 10,
              }
            }
            testID="edit"
          >
            <Text
              allowFontScaling={false}
              style={
                Array [
                  Object {
                    "color": undefined,
                    "fontSize": 12,
                  },
                  Object {
                    "color": "#232b2b",
                    "fontSize": 20,
                  },
                  Object {
                    "fontFamily": "material-community",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              󰏫
            </Text>
          </View>
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "justifyContent": "center",
                "opacity": 1,
                "padding": 10,
              }
            }
            testID="delete"
          >
            <Text
              allowFontScaling={false}
              style={
                Array [
                  Object {
                    "color": undefined,
                    "fontSize": 12,
                  },
                  Object {
                    "color": "#232b2b",
                    "fontSize": 20,
                  },
                  Object {
                    "fontFamily": "material-community",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              󰩹
            </Text>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "borderTopColor": "#e5e5e5",
        "borderTopWidth": 1,
        "marginBottom": 20,
        "opacity": 1,
        "paddingTop": 10,
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "borderColor": "#2a9e91",
          "borderRadius": 25,
          "borderWidth": 1,
          "height": 50,
          "justifyContent": "center",
          "width": 50,
        }
      }
    >
      <Text
        allowFontScaling={false}
        style={
          Array [
            Object {
              "color": undefined,
              "fontSize": 12,
            },
            Object {
              "color": "#2a9e91",
              "fontSize": 40,
              "fontWeight": "bold",
            },
            Object {
              "fontFamily": "material-community",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
            Object {},
          ]
        }
      >
        󰐕
      </Text>
    </View>
  </View>
</View>
`;
