// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<TacticsPage /> renders correctly 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#fff",
      "flex": 1,
    }
  }
>
  <View>
    <View>
      <Modal
        animationType="fade"
        hardwareAccelerated={false}
        onRequestClose={[Function]}
        visible={false}
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flex": 1,
              "justifyContent": "center",
              "marginTop": 22,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "white",
                "borderRadius": 20,
                "elevation": 5,
                "height": "70%",
                "justifyContent": "space-around",
                "margin": 20,
                "padding": 15,
                "shadowColor": "#000",
                "shadowOffset": Object {
                  "height": 2,
                  "width": 0,
                },
                "shadowOpacity": 0.25,
                "shadowRadius": 3.84,
                "width": "80%",
              }
            }
          >
            <View
              accessible={true}
              focusable={true}
              isTVSelectable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "backgroundColor": "#e5e5e5",
                  "borderColor": "#232b2b",
                  "borderRadius": 2,
                  "borderWidth": 1,
                  "elevation": 2,
                  "marginHorizontal": 5,
                  "padding": 10,
                  "paddingHorizontal": 5,
                  "shadowColor": "#000",
                  "shadowOffset": Object {
                    "height": 1,
                    "width": 0,
                  },
                  "shadowOpacity": 0.2,
                  "shadowRadius": 1.41,
                  "width": "100%",
                }
              }
            >
              <Text
                style={
                  Object {
                    "color": "#232b2b",
                    "fontSize": 20,
                    "fontWeight": "bold",
                    "textAlign": "center",
                  }
                }
              >
                Vertical Stack
              </Text>
            </View>
            <View
              accessible={true}
              focusable={true}
              isTVSelectable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "backgroundColor": "#e5e5e5",
                  "borderColor": "#232b2b",
                  "borderRadius": 2,
                  "borderWidth": 1,
                  "elevation": 2,
                  "marginHorizontal": 5,
                  "padding": 10,
                  "paddingHorizontal": 5,
                  "shadowColor": "#000",
                  "shadowOffset": Object {
                    "height": 1,
                    "width": 0,
                  },
                  "shadowOpacity": 0.2,
                  "shadowRadius": 1.41,
                  "width": "100%",
                }
              }
            >
              <Text
                style={
                  Object {
                    "color": "#232b2b",
                    "fontSize": 20,
                    "fontWeight": "bold",
                    "textAlign": "center",
                  }
                }
              >
                Horizontal Stack
              </Text>
            </View>
            <View
              accessible={true}
              focusable={true}
              isTVSelectable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "backgroundColor": "#e5e5e5",
                  "borderColor": "#232b2b",
                  "borderRadius": 2,
                  "borderWidth": 1,
                  "elevation": 2,
                  "marginHorizontal": 5,
                  "padding": 10,
                  "paddingHorizontal": 5,
                  "shadowColor": "#000",
                  "shadowOffset": Object {
                    "height": 1,
                    "width": 0,
                  },
                  "shadowOpacity": 0.2,
                  "shadowRadius": 1.41,
                  "width": "100%",
                }
              }
            >
              <Text
                style={
                  Object {
                    "color": "#232b2b",
                    "fontSize": 20,
                    "fontWeight": "bold",
                    "textAlign": "center",
                  }
                }
              >
                Endzone Offense
              </Text>
            </View>
            <View
              accessible={true}
              focusable={true}
              isTVSelectable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "backgroundColor": "#e5e5e5",
                  "borderColor": "#232b2b",
                  "borderRadius": 2,
                  "borderWidth": 1,
                  "elevation": 2,
                  "marginHorizontal": 5,
                  "padding": 10,
                  "paddingHorizontal": 5,
                  "shadowColor": "#000",
                  "shadowOffset": Object {
                    "height": 1,
                    "width": 0,
                  },
                  "shadowOpacity": 0.2,
                  "shadowRadius": 1.41,
                  "width": "100%",
                }
              }
            >
              <Text
                style={
                  Object {
                    "color": "#232b2b",
                    "fontSize": 20,
                    "fontWeight": "bold",
                    "textAlign": "center",
                  }
                }
              >
                Handling
              </Text>
            </View>
            <View
              accessible={true}
              focusable={true}
              isTVSelectable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "backgroundColor": "#232b2b",
                  "borderRadius": 10,
                  "elevation": 2,
                  "padding": 10,
                  "paddingHorizontal": 20,
                  "width": 120,
                }
              }
            >
              <Text
                style={
                  Object {
                    "color": "white",
                    "fontWeight": "bold",
                    "textAlign": "center",
                  }
                }
              >
                Return
              </Text>
            </View>
          </View>
        </View>
      </Modal>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "paddingTop": 20,
        }
      }
    >
      <View
        accessible={true}
        focusable={true}
        isTVSelectable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "#fff",
            "borderRadius": 5,
            "elevation": 2,
            "padding": 10,
            "paddingVertical": 10,
            "shadowColor": "#000",
            "shadowOffset": Object {
              "height": 1,
              "width": 0,
            },
            "shadowOpacity": 0.2,
            "shadowRadius": 1.41,
            "width": "50%",
          }
        }
      >
        <View
          style={null}
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <Text
              style={
                Object {
                  "color": "#232b2b",
                  "fontWeight": "bold",
                  "textAlign": "center",
                }
              }
            >
              Vertical Stack
            </Text>
            <Text />
          </View>
          <View
            style={
              Object {
                "borderBottomColor": "#e5e5e5",
                "borderBottomWidth": 1,
              }
            }
          />
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "paddingTop": 20,
        }
      }
    >
      <RCTScrollView
        contentContainerStyle={
          Object {
            "paddingBottom": 50,
            "paddingVertical": 10,
          }
        }
        data={
          Array [
            Object {
              "animation": "",
              "id": 1,
              "text": "That Drone Guy Ty",
              "title": "How does vertical stacks work?",
              "video": "424002454",
            },
          ]
        }
        disableVirtualization={false}
        getItem={[Function]}
        getItemCount={[Function]}
        horizontal={false}
        initialNumToRender={10}
        keyExtractor={[Function]}
        maxToRenderPerBatch={10}
        numColumns={1}
        onContentSizeChange={[Function]}
        onEndReachedThreshold={2}
        onLayout={[Function]}
        onMomentumScrollEnd={[Function]}
        onScroll={[Function]}
        onScrollBeginDrag={[Function]}
        onScrollEndDrag={[Function]}
        removeClippedSubviews={false}
        renderItem={[Function]}
        scrollEventThrottle={50}
        stickyHeaderIndices={Array []}
        updateCellsBatchingPeriod={50}
        viewabilityConfigCallbackPairs={Array []}
        windowSize={21}
      >
        <View>
          <View
            onLayout={[Function]}
            style={null}
          >
            <View
              style={
                Object {
                  "paddingVertical": 15,
                }
              }
            >
              <Text
                style={
                  Object {
                    "fontSize": 16,
                    "fontWeight": "bold",
                    "paddingLeft": 10,
                  }
                }
              >
                How does vertical stacks work?
              </Text>
            </View>
            <View
              style={
                Object {
                  "backgroundColor": "#fff",
                  "flex": 1,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "height": 250,
                    "justifyContent": "center",
                  }
                }
              >
                <View
                  style={
                    Object {
                      "position": "absolute",
                    }
                  }
                >
                  <ActivityIndicator
                    animating={true}
                    color="#A6A6A6"
                    hidesWhenStopped={true}
                    size="large"
                  />
                  <Text>
                    Loading...
                  </Text>
                </View>
                <View
                  pointerEvents="box-none"
                  style={
                    Object {
                      "height": 250,
                      "overflow": "hidden",
                      "width": 750,
                    }
                  }
                >
                  <ViewManagerAdapter_ExpoVideoView
                    proxiedProperties={
                      Object {
                        "onError": [Function],
                        "onFullscreenUpdate": [Function],
                        "onLoad": [Function],
                        "onLoadStart": [Function],
                        "onReadyForDisplay": [Function],
                        "onStatusUpdate": [Function],
                        "resizeMode": "mock",
                        "source": undefined,
                        "status": Object {},
                        "useNativeControls": true,
                      }
                    }
                    style={
                      Object {
                        "bottom": 0,
                        "left": 0,
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      }
                    }
                  />
                </View>
              </View>
            </View>
            <View
              style={
                Object {
                  "alignItems": "center",
                  "paddingVertical": 15,
                  "textAlign": "center",
                }
              }
            >
              <Text
                style={
                  Object {
                    "fontSize": 14,
                    "paddingLeft": 10,
                  }
                }
              >
                That Drone Guy Ty
              </Text>
            </View>
            <View
              style={
                Object {
                  "borderBottomColor": "#e5e5e5",
                  "borderBottomWidth": 1,
                }
              }
            />
          </View>
        </View>
      </RCTScrollView>
    </View>
  </View>
</View>
`;
