// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Animation /> renders correctly 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "flex-start",
        "backgroundColor": "white",
        "flexDirection": "row",
        "justifyContent": "center",
      },
      Object {
        "height": NaN,
      },
      Object {
        "width": NaN,
      },
    ]
  }
>
  <View
    height="100%"
    style={
      Array [
        Object {
          "position": "absolute",
        },
      ]
    }
    width="100%"
  >
    <RNSVGSvgView
      bbHeight="100%"
      bbWidth="100%"
      focusable={false}
      height="100%"
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderWidth": 0,
          },
          Array [
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            },
          ],
          Object {
            "flex": 0,
            "height": "100%",
            "width": "100%",
          },
        ]
      }
      width="100%"
    >
      <RNSVGGroup>
        <RNSVGLine
          propList={
            Array [
              "stroke",
              "strokeWidth",
              "strokeDasharray",
            ]
          }
          stroke={4278222848}
          strokeDasharray={
            Array [
              "5",
              "5",
            ]
          }
          strokeWidth="2"
          x1={NaN}
          x2={NaN}
          y1={NaN}
          y2={NaN}
        />
        <RNSVGLine
          propList={
            Array [
              "stroke",
              "strokeWidth",
              "strokeDasharray",
            ]
          }
          stroke={4278222848}
          strokeDasharray={
            Array [
              "5",
              "5",
            ]
          }
          strokeWidth="2"
          x1={NaN}
          x2={NaN}
          y1={NaN}
          y2={NaN}
        />
        <RNSVGCircle
          cx={NaN}
          cy={NaN}
          fill={4278222848}
          propList={
            Array [
              "fill",
            ]
          }
          r={NaN}
        />
      </RNSVGGroup>
    </RNSVGSvgView>
  </View>
  <Text
    onMoveShouldSetResponder={[Function]}
    onMoveShouldSetResponderCapture={[Function]}
    onResponderEnd={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderReject={[Function]}
    onResponderRelease={[Function]}
    onResponderStart={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onStartShouldSetResponderCapture={[Function]}
    style={
      Object {
        "backgroundColor": "#cd5c5c",
        "borderRadius": NaN,
        "color": "white",
        "height": NaN,
        "left": 0,
        "position": "absolute",
        "textAlign": "center",
        "textAlignVertical": "center",
        "top": 0,
        "transform": Array [
          Object {
            "translateX": NaN,
          },
          Object {
            "translateY": NaN,
          },
        ],
        "width": NaN,
      }
    }
  >
    1
  </Text>
  <Text
    onMoveShouldSetResponder={[Function]}
    onMoveShouldSetResponderCapture={[Function]}
    onResponderEnd={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderReject={[Function]}
    onResponderRelease={[Function]}
    onResponderStart={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onStartShouldSetResponderCapture={[Function]}
    style={
      Object {
        "backgroundColor": "#dcdcdc",
        "borderRadius": NaN,
        "color": "black",
        "height": NaN,
        "left": 0,
        "position": "absolute",
        "textAlign": "center",
        "textAlignVertical": "center",
        "top": 0,
        "transform": Array [
          Object {
            "translateX": NaN,
          },
          Object {
            "translateY": NaN,
          },
        ],
        "width": NaN,
      }
    }
  >
    2
  </Text>
  <Text
    onMoveShouldSetResponder={[Function]}
    onMoveShouldSetResponderCapture={[Function]}
    onResponderEnd={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderReject={[Function]}
    onResponderRelease={[Function]}
    onResponderStart={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onStartShouldSetResponderCapture={[Function]}
    style={
      Object {
        "backgroundColor": "#cd5c5c",
        "borderRadius": NaN,
        "color": "white",
        "height": NaN,
        "left": 0,
        "position": "absolute",
        "textAlign": "center",
        "textAlignVertical": "center",
        "top": 0,
        "transform": Array [
          Object {
            "translateX": NaN,
          },
          Object {
            "translateY": NaN,
          },
        ],
        "width": NaN,
      }
    }
  >
    3
  </Text>
  <View
    onMoveShouldSetResponder={[Function]}
    onMoveShouldSetResponderCapture={[Function]}
    onResponderEnd={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderReject={[Function]}
    onResponderRelease={[Function]}
    onResponderStart={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onStartShouldSetResponderCapture={[Function]}
    style={
      Object {
        "backgroundColor": "white",
        "borderColor": "black",
        "borderRadius": NaN,
        "borderWidth": NaN,
        "height": NaN,
        "left": 0,
        "position": "absolute",
        "top": 0,
        "transform": Array [
          Object {
            "translateX": NaN,
          },
          Object {
            "translateY": NaN,
          },
        ],
        "width": NaN,
      }
    }
  />
  <View
    style={
      Object {
        "bottom": 0,
        "flexDirection": "row",
        "position": "absolute",
        "right": 0,
      }
    }
  >
    <View
      accessible={true}
      focusable={true}
      isTVSelectable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "height": 30,
          "justifyContent": "center",
          "opacity": 1,
          "width": 30,
        }
      }
    >
      <Image
        source={1}
        style={
          Object {
            "height": 20,
            "width": 20,
          }
        }
      />
    </View>
    <View
      accessible={true}
      focusable={true}
      isTVSelectable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "height": 30,
          "justifyContent": "center",
          "opacity": 1,
          "width": 30,
        }
      }
    >
      <Image
        source={1}
        style={
          Object {
            "height": 20,
            "width": 20,
          }
        }
      />
    </View>
    <View
      accessible={true}
      focusable={true}
      isTVSelectable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "height": 30,
          "justifyContent": "center",
          "opacity": 1,
          "width": 30,
        }
      }
    >
      <Image
        source={1}
        style={
          Object {
            "height": 20,
            "width": 20,
          }
        }
      />
    </View>
  </View>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "gray",
        },
        Object {
          "borderRadius": 10,
          "borderWidth": 0,
          "bottom": 7.5,
          "height": 15,
          "position": "absolute",
          "width": 15,
        },
        Object {
          "left": NaN,
        },
      ]
    }
  />
  <View
    style={
      Array [
        Object {
          "backgroundColor": "gray",
        },
        Object {
          "borderRadius": 10,
          "borderWidth": 0,
          "bottom": 7.5,
          "height": 15,
          "position": "absolute",
          "width": 15,
        },
        Object {
          "left": NaN,
        },
      ]
    }
  />
  <View
    style={
      Array [
        Object {
          "backgroundColor": "gray",
        },
        Object {
          "borderRadius": 10,
          "borderWidth": 0,
          "bottom": 7.5,
          "height": 15,
          "position": "absolute",
          "width": 15,
        },
        Object {
          "left": NaN,
        },
      ]
    }
  />
  <View
    style={
      Object {
        "backgroundColor": "gray",
        "bottom": 13,
        "height": 4,
        "left": 20,
        "position": "absolute",
        "width": NaN,
      }
    }
  />
  <View
    style={
      Object {
        "backgroundColor": "black",
        "borderRadius": 10,
        "borderWidth": 0,
        "bottom": 7.5,
        "height": 15,
        "left": NaN,
        "opacity": 1,
        "position": "absolute",
        "width": 15,
      }
    }
  />
  <View
    style={
      Object {
        "backgroundColor": "black",
        "borderRadius": 10,
        "borderWidth": 0,
        "bottom": 7.5,
        "height": 15,
        "left": NaN,
        "opacity": 0,
        "position": "absolute",
        "width": 15,
      }
    }
  />
  <View
    style={
      Object {
        "backgroundColor": "black",
        "borderRadius": 10,
        "borderWidth": 0,
        "bottom": 7.5,
        "height": 15,
        "left": NaN,
        "opacity": 0,
        "position": "absolute",
        "width": 15,
      }
    }
  />
  <Text
    style={
      Array [
        Object {
          "bottom": 23.5,
          "position": "absolute",
        },
        Object {
          "left": NaN,
        },
      ]
    }
  >
    1
  </Text>
  <Text
    style={
      Array [
        Object {
          "bottom": 23.5,
          "position": "absolute",
        },
        Object {
          "left": NaN,
        },
      ]
    }
  >
    2
  </Text>
  <Text
    style={
      Array [
        Object {
          "bottom": 23.5,
          "position": "absolute",
        },
        Object {
          "left": NaN,
        },
      ]
    }
  >
    3
  </Text>
  <View
    style={
      Object {
        "backgroundColor": "black",
        "bottom": 13,
        "height": 4,
        "left": 20,
        "position": "absolute",
        "width": NaN,
      }
    }
  />
  <View
    accessible={true}
    focusable={true}
    isTVSelectable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "bottom": 0,
        "height": 35,
        "left": NaN,
        "opacity": 1,
        "position": "absolute",
        "width": 35,
      }
    }
  />
  <View
    accessible={true}
    focusable={true}
    isTVSelectable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "bottom": 0,
        "height": 35,
        "left": NaN,
        "opacity": 1,
        "position": "absolute",
        "width": 35,
      }
    }
  />
  <View
    accessible={true}
    focusable={true}
    isTVSelectable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "bottom": 0,
        "height": 35,
        "left": NaN,
        "opacity": 1,
        "position": "absolute",
        "width": 35,
      }
    }
  />
</View>
`;
