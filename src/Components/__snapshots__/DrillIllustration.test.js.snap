// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<DrillIllustration /> renders correctly for a drill with a video from vimeo 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <Text>
    No visual content for this drill
  </Text>
</View>
`;

exports[`<DrillIllustration /> renders correctly for a drill with animation 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <Text>
    No visual content for this drill
  </Text>
</View>
`;

exports[`<DrillIllustration /> renders correctly for a drill with no video nor animation 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View>
    <View
      style={
        Object {
          "alignItems": "center",
          "flex": 1,
          "height": 1254,
          "justifyContent": "center",
        }
      }
    >
      <View>
        <View
          accessible={true}
          focusable={true}
          isTVSelectable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "borderRadius": 50,
              "height": 100,
              "justifyContent": "center",
              "margin": 20,
              "opacity": 1,
              "width": 100,
            }
          }
          testID="gradientButton"
        >
          <ViewManagerAdapter_ExpoLinearGradient
            proxiedProperties={
              Object {
                "colors": Array [
                  4278759146,
                  4281005464,
                ],
                "endPoint": Array [
                  0,
                  0,
                ],
                "locations": undefined,
                "startPoint": Array [
                  1,
                  1,
                ],
              }
            }
            style={
              Object {
                "alignItems": "center",
                "borderRadius": 50,
                "height": 100,
                "justifyContent": "center",
                "width": 100,
              }
            }
          >
            <Text
              style={
                Object {
                  "fontSize": 16,
                  "fontWeight": "bold",
                }
              }
            >
              Do it again
            </Text>
          </ViewManagerAdapter_ExpoLinearGradient>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`<DrillIllustration /> renders correctly for a drill with video 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
          "overflow": "hidden",
        },
        undefined,
      ]
    }
  >
    <RNCWebView
      cacheEnabled={true}
      javaScriptEnabled={true}
      messagingEnabled={false}
      onContentProcessDidTerminate={[Function]}
      onHttpError={[Function]}
      onLoadingError={[Function]}
      onLoadingFinish={[Function]}
      onLoadingProgress={[Function]}
      onLoadingStart={[Function]}
      onMessage={[Function]}
      onShouldStartLoadWithRequest={[Function]}
      source={
        Object {
          "uri": "https://www.youtube.com/embed/JkVHrA5o23o",
        }
      }
      style={
        Array [
          Object {
            "flex": 1,
            "overflow": "hidden",
          },
          Object {
            "backgroundColor": "#ffffff",
          },
          Object {
            "flex": 1,
            "height": 1254,
          },
        ]
      }
      useSharedProcessPool={true}
    />
  </View>
</View>
`;
