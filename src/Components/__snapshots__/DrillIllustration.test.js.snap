// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<DrillIllustration /> renders correctly for a drill with a video from vimeo 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "flex": 1,
        "height": 1254,
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "flex": 1,
          "justifyContent": "center",
        }
      }
    >
      <View
        style={
          Object {
            "position": "absolute",
          }
        }
      >
        <ActivityIndicator
          animating={true}
          color="#A6A6A6"
          hidesWhenStopped={true}
          size="large"
        />
        <Text>
          Loading...
        </Text>
      </View>
      <View
        pointerEvents="box-none"
        style={
          Object {
            "height": 250,
            "overflow": "hidden",
            "width": 750,
          }
        }
      >
        <ViewManagerAdapter_ExpoVideoView
          proxiedProperties={
            Object {
              "onError": [Function],
              "onFullscreenUpdate": [Function],
              "onLoad": [Function],
              "onLoadStart": [Function],
              "onReadyForDisplay": [Function],
              "onStatusUpdate": [Function],
              "resizeMode": "mock",
              "source": undefined,
              "status": Object {},
            }
          }
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        />
      </View>
    </View>
    <View>
      <View
        style={
          Object {
            "flexDirection": "row",
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flex": 1,
            }
          }
        >
          <Text
            style={
              Object {
                "color": "#232b2b",
                "fontSize": 20,
                "fontWeight": "bold",
                "marginBottom": 20,
                "marginLeft": 20,
                "marginTop": 20,
              }
            }
          >
            20
          </Text>
        </View>
        <View
          style={
            Object {
              "flex": 6,
            }
          }
        >
          <Text
            style={
              Object {
                "color": "#232b2b",
                "fontSize": 20,
                "fontWeight": "bold",
                "marginBottom": 20,
                "marginLeft": 20,
                "marginTop": 20,
              }
            }
          >
            Rower Hamstring
          </Text>
        </View>
        <View
          accessible={true}
          focusable={true}
          isTVSelectable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#fff",
              "borderColor": "#d5d5d5",
              "borderRadius": 12.5,
              "borderWidth": 2,
              "height": 25,
              "justifyContent": "center",
              "margin": 22.5,
              "opacity": 1,
              "width": 25,
            }
          }
        />
      </View>
      <View
        style={
          Object {
            "borderBottomColor": "#DCDCDC",
            "borderBottomWidth": 1,
          }
        }
      />
    </View>
    <View
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <View>
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
              }
            }
          >
            <Text
              style={
                Object {
                  "color": "#A6A6A6",
                  "fontSize": 20,
                  "marginBottom": 20,
                  "marginLeft": 20,
                  "marginTop": 20,
                }
              }
            >
              8
            </Text>
          </View>
          <View
            style={
              Object {
                "flex": 6,
              }
            }
          >
            <Text
              style={
                Object {
                  "color": "#A6A6A6",
                  "fontSize": 20,
                  "marginBottom": 20,
                  "marginLeft": 20,
                  "marginTop": 20,
                }
              }
            >
              Full Clean
            </Text>
          </View>
          <View
            style={
              Object {
                "width": 70,
              }
            }
          />
        </View>
        <View
          style={
            Object {
              "borderBottomColor": "#DCDCDC",
              "borderBottomWidth": 1,
            }
          }
        />
      </View>
    </View>
  </View>
</View>
`;

exports[`<DrillIllustration /> renders correctly for a drill with animation 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RCTScrollView>
    <View>
      <View
        style={
          Object {
            "flex": 1,
            "height": 1174,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "flex-start",
                "backgroundColor": "white",
                "flexDirection": "row",
                "justifyContent": "center",
                "marginTop": 40,
              },
              Object {
                "height": 667,
              },
              Object {
                "width": 750,
              },
            ]
          }
        >
          <View
            height="100%"
            style={
              Array [
                Object {
                  "position": "absolute",
                },
              ]
            }
            width="100%"
          >
            <RNSVGSvgView
              bbHeight="100%"
              bbWidth="100%"
              focusable={false}
              height="100%"
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "borderWidth": 0,
                  },
                  Array [
                    Object {
                      "bottom": 0,
                      "left": 0,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    },
                  ],
                  Object {
                    "flex": 0,
                    "height": "100%",
                    "width": "100%",
                  },
                ]
              }
              width="100%"
            >
              <RNSVGGroup>
                <RNSVGLine
                  propList={
                    Array [
                      "stroke",
                      "strokeWidth",
                      "strokeDasharray",
                    ]
                  }
                  stroke={4278222848}
                  strokeDasharray={
                    Array [
                      "5",
                      "5",
                    ]
                  }
                  strokeWidth="2"
                  x1={328.8958333333333}
                  x2={238.89583333333334}
                  y1={87.26583333333333}
                  y2={213.99583333333334}
                />
                <RNSVGLine
                  propList={
                    Array [
                      "stroke",
                      "strokeWidth",
                      "strokeDasharray",
                    ]
                  }
                  stroke={4278222848}
                  strokeDasharray={
                    Array [
                      "5",
                      "5",
                    ]
                  }
                  strokeWidth="2"
                  x1={238.89583333333334}
                  x2={328.8958333333333}
                  y1={213.99583333333334}
                  y2={300.7058333333333}
                />
                <RNSVGCircle
                  cx={328.8958333333333}
                  cy={300.7058333333333}
                  fill={4278222848}
                  propList={
                    Array [
                      "fill",
                    ]
                  }
                  r={27.791666666666668}
                />
              </RNSVGGroup>
            </RNSVGSvgView>
          </View>
          <Text
            onMoveShouldSetResponder={[Function]}
            onMoveShouldSetResponderCapture={[Function]}
            onResponderEnd={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderReject={[Function]}
            onResponderRelease={[Function]}
            onResponderStart={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            onStartShouldSetResponderCapture={[Function]}
            style={
              Object {
                "backgroundColor": "#cd5c5c",
                "borderRadius": 55.583333333333336,
                "color": "white",
                "height": 55.583333333333336,
                "left": 0,
                "position": "absolute",
                "textAlign": "center",
                "textAlignVertical": "center",
                "top": 0,
                "transform": Array [
                  Object {
                    "translateX": 337.5,
                  },
                  Object {
                    "translateY": 40.019999999999996,
                  },
                ],
                "width": 55.583333333333336,
              }
            }
          >
            1
          </Text>
          <Text
            onMoveShouldSetResponder={[Function]}
            onMoveShouldSetResponderCapture={[Function]}
            onResponderEnd={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderReject={[Function]}
            onResponderRelease={[Function]}
            onResponderStart={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            onStartShouldSetResponderCapture={[Function]}
            style={
              Object {
                "backgroundColor": "#dcdcdc",
                "borderRadius": 55.583333333333336,
                "color": "black",
                "height": 55.583333333333336,
                "left": 0,
                "position": "absolute",
                "textAlign": "center",
                "textAlignVertical": "center",
                "top": 0,
                "transform": Array [
                  Object {
                    "translateX": 337.5,
                  },
                  Object {
                    "translateY": 100.05,
                  },
                ],
                "width": 55.583333333333336,
              }
            }
          >
            2
          </Text>
          <Text
            onMoveShouldSetResponder={[Function]}
            onMoveShouldSetResponderCapture={[Function]}
            onResponderEnd={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderReject={[Function]}
            onResponderRelease={[Function]}
            onResponderStart={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            onStartShouldSetResponderCapture={[Function]}
            style={
              Object {
                "backgroundColor": "#cd5c5c",
                "borderRadius": 55.583333333333336,
                "color": "white",
                "height": 55.583333333333336,
                "left": 0,
                "position": "absolute",
                "textAlign": "center",
                "textAlignVertical": "center",
                "top": 0,
                "transform": Array [
                  Object {
                    "translateX": 337.5,
                  },
                  Object {
                    "translateY": 300.15000000000003,
                  },
                ],
                "width": 55.583333333333336,
              }
            }
          >
            3
          </Text>
          <View
            onMoveShouldSetResponder={[Function]}
            onMoveShouldSetResponderCapture={[Function]}
            onResponderEnd={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderReject={[Function]}
            onResponderRelease={[Function]}
            onResponderStart={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            onStartShouldSetResponderCapture={[Function]}
            style={
              Object {
                "backgroundColor": "white",
                "borderColor": "black",
                "borderRadius": 27.791666666666668,
                "borderWidth": 2.779166666666667,
                "height": 27.791666666666668,
                "left": 0,
                "position": "absolute",
                "top": 0,
                "transform": Array [
                  Object {
                    "translateX": 315,
                  },
                  Object {
                    "translateY": 73.37,
                  },
                ],
                "width": 27.791666666666668,
              }
            }
          />
          <View
            style={
              Object {
                "flex": 0.1,
              }
            }
          />
          <View
            accessibilityRole="button"
            accessibilityStates={Array []}
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <View
              style={
                Array [
                  Object {},
                ]
              }
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#007AFF",
                      "fontSize": 18,
                      "padding": 8,
                      "textAlign": "center",
                    },
                  ]
                }
              >
                 &lt; 
              </Text>
            </View>
          </View>
          <View
            style={
              Object {
                "flex": 0.1,
              }
            }
          />
          <View
            accessibilityRole="button"
            accessibilityStates={Array []}
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <View
              style={
                Array [
                  Object {},
                ]
              }
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#007AFF",
                      "fontSize": 18,
                      "padding": 8,
                      "textAlign": "center",
                    },
                  ]
                }
              >
                Lancer
              </Text>
            </View>
          </View>
          <View
            style={
              Object {
                "flex": 0.1,
              }
            }
          />
          <View
            accessibilityRole="button"
            accessibilityStates={Array []}
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <View
              style={
                Array [
                  Object {},
                ]
              }
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#007AFF",
                      "fontSize": 18,
                      "padding": 8,
                      "textAlign": "center",
                    },
                  ]
                }
              >
                 &gt; 
              </Text>
            </View>
          </View>
          <View
            style={
              Array [
                Object {
                  "backgroundColor": "gray",
                  "borderRadius": 10,
                  "borderWidth": 0,
                  "height": 15,
                  "position": "absolute",
                  "width": 15,
                },
                Object {
                  "left": 10,
                },
                Object {
                  "top": 667,
                },
              ]
            }
          />
          <View
            style={
              Array [
                Object {
                  "backgroundColor": "gray",
                  "borderRadius": 10,
                  "borderWidth": 0,
                  "height": 15,
                  "position": "absolute",
                  "width": 15,
                },
                Object {
                  "left": 365,
                },
                Object {
                  "top": 667,
                },
              ]
            }
          />
          <View
            style={
              Array [
                Object {
                  "backgroundColor": "gray",
                  "borderRadius": 10,
                  "borderWidth": 0,
                  "height": 15,
                  "position": "absolute",
                  "width": 15,
                },
                Object {
                  "left": 720,
                },
                Object {
                  "top": 667,
                },
              ]
            }
          />
          <View
            style={
              Object {
                "backgroundColor": "gray",
                "height": 3,
                "left": 20,
                "position": "absolute",
                "top": 673,
                "width": 710,
              }
            }
          />
          <View
            style={
              Object {
                "backgroundColor": "blue",
                "borderRadius": 10,
                "borderWidth": 0,
                "height": 15,
                "left": 10,
                "opacity": 1,
                "position": "absolute",
                "top": 667,
                "width": 15,
              }
            }
          />
          <View
            style={
              Object {
                "backgroundColor": "blue",
                "borderRadius": 10,
                "borderWidth": 0,
                "height": 15,
                "left": 365,
                "opacity": 0,
                "position": "absolute",
                "top": 667,
                "width": 15,
              }
            }
          />
          <View
            style={
              Object {
                "backgroundColor": "blue",
                "borderRadius": 10,
                "borderWidth": 0,
                "height": 15,
                "left": 720,
                "opacity": 0,
                "position": "absolute",
                "top": 667,
                "width": 15,
              }
            }
          />
          <Text
            style={
              Array [
                Object {
                  "position": "absolute",
                },
                Object {
                  "left": 14,
                },
                Object {
                  "top": 648,
                },
              ]
            }
          >
            1
          </Text>
          <Text
            style={
              Array [
                Object {
                  "position": "absolute",
                },
                Object {
                  "left": 369,
                },
                Object {
                  "top": 648,
                },
              ]
            }
          >
            2
          </Text>
          <Text
            style={
              Array [
                Object {
                  "position": "absolute",
                },
                Object {
                  "left": 724,
                },
                Object {
                  "top": 648,
                },
              ]
            }
          >
            3
          </Text>
          <View
            style={
              Object {
                "backgroundColor": "blue",
                "height": 3,
                "left": 20,
                "position": "absolute",
                "top": 673,
                "width": 0,
              }
            }
          />
          <View
            accessible={true}
            focusable={true}
            hitSlop={
              Object {
                "bottom": 20,
                "left": 20,
                "right": 20,
                "top": 20,
              }
            }
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "height": 80,
                "left": -5,
                "opacity": 1,
                "position": "absolute",
                "top": 652,
                "width": 80,
              }
            }
          />
          <View
            accessible={true}
            focusable={true}
            hitSlop={
              Object {
                "bottom": 20,
                "left": 20,
                "right": 20,
                "top": 20,
              }
            }
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "height": 80,
                "left": 350,
                "opacity": 1,
                "position": "absolute",
                "top": 652,
                "width": 80,
              }
            }
          />
          <View
            accessible={true}
            focusable={true}
            hitSlop={
              Object {
                "bottom": 20,
                "left": 20,
                "right": 20,
                "top": 20,
              }
            }
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "height": 80,
                "left": 705,
                "opacity": 1,
                "position": "absolute",
                "top": 652,
                "width": 80,
              }
            }
          />
        </View>
      </View>
      <View
        style={
          Object {
            "alignSelf": "flex-end",
            "flexDirection": "row",
          }
        }
      >
        <Text
          style={
            Object {
              "color": "#232b2b",
              "fontSize": 20,
              "fontWeight": "bold",
              "marginBottom": 20,
              "marginLeft": 20,
              "marginTop": 20,
            }
          }
        />
        <View
          accessible={true}
          focusable={true}
          isTVSelectable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#fff",
              "borderColor": "#d5d5d5",
              "borderRadius": 12.5,
              "borderWidth": 2,
              "height": 25,
              "justifyContent": "center",
              "margin": 22.5,
              "opacity": 1,
              "width": 25,
            }
          }
        />
      </View>
      <View
        style={
          Object {
            "flex": 6,
          }
        }
      >
        <Text
          style={
            Object {
              "alignItems": "center",
              "color": "#232b2b",
              "fontSize": 16,
              "justifyContent": "center",
              "marginBottom": 20,
              "marginLeft": 20,
              "marginTop": 20,
            }
          }
        />
      </View>
    </View>
  </RCTScrollView>
</View>
`;

exports[`<DrillIllustration /> renders correctly for a drill with no video nor animation 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View>
    <View
      style={
        Object {
          "alignItems": "center",
          "flex": 1,
          "height": 1254,
          "justifyContent": "center",
        }
      }
    >
      <View>
        <View
          accessible={true}
          focusable={true}
          isTVSelectable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "borderRadius": 50,
              "height": 100,
              "justifyContent": "center",
              "margin": 20,
              "opacity": 1,
              "width": 100,
            }
          }
          testID="gradientButton"
        >
          <ViewManagerAdapter_ExpoLinearGradient
            proxiedProperties={
              Object {
                "colors": Array [
                  4278759146,
                  4281005464,
                ],
                "endPoint": Array [
                  0,
                  0,
                ],
                "locations": undefined,
                "startPoint": Array [
                  1,
                  1,
                ],
              }
            }
            style={
              Object {
                "alignItems": "center",
                "borderRadius": 50,
                "height": 100,
                "justifyContent": "center",
                "width": 100,
              }
            }
          >
            <Text
              style={
                Object {
                  "fontSize": 16,
                  "fontWeight": "bold",
                }
              }
            >
              Do it again
            </Text>
          </ViewManagerAdapter_ExpoLinearGradient>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`<DrillIllustration /> renders correctly for a drill with video 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
          "overflow": "hidden",
        },
        undefined,
      ]
    }
  >
    <RNCWebView
      cacheEnabled={true}
      javaScriptEnabled={true}
      messagingEnabled={false}
      onContentProcessDidTerminate={[Function]}
      onHttpError={[Function]}
      onLoadingError={[Function]}
      onLoadingFinish={[Function]}
      onLoadingProgress={[Function]}
      onLoadingStart={[Function]}
      onMessage={[Function]}
      onShouldStartLoadWithRequest={[Function]}
      source={
        Object {
          "uri": "https://www.youtube.com/embed/JkVHrA5o23o",
        }
      }
      style={
        Array [
          Object {
            "flex": 1,
            "overflow": "hidden",
          },
          Object {
            "backgroundColor": "#ffffff",
          },
          Object {
            "flex": 1,
            "height": 1254,
          },
        ]
      }
      useSharedProcessPool={true}
    />
  </View>
</View>
`;
